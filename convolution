function main()
x=input(&#39;Enter the array x&#39;,&#39;s&#39;);
llx=input(&#39;Enter the lower limit of x&#39;);
ulx=input(&#39;Enter the upper limit of x&#39;);
h=input(&#39;Enter the array h&#39;,&#39;s&#39;);
llh=input(&#39;Enter the lower limit of h&#39;);
ulh=input(&#39;Enter the upper limit of h&#39;);
x=str2num(x);
h=str2num(h);
n=(llx+llh):(ulx+ulh);
c=1;
for i=n(1):n(length(n))
m=1;
y1=zeros(10);
for j=-10:10
temp=h1(h,llh,ulh,-j+i)*x1(x,llx,ulx,j);
if temp~=0
y1(1,m)=temp;
y1=y1(1:m);
b(1,m)=j;
b=b(1:m);
m=m+1;
end
end
y(1,c)=sum(y1);
figure(c);
stem(b,y1);
xlim([-5 5]);
xlabel(&#39;time&#39;);
ylabel(&#39;x(k)*h(-k+n)&#39;);
disp(y1);
c=c+1;
end
figure(c+1);
stem(n,y);
end

function [x1]=x1(x,llx,ulx,i)
if i&lt;=ulx &amp;&amp; i&gt;=llx
x1=x(i-llx+1);
else
x1=0;
end
end
function [h1]=h1(h,llh,ulh,i)
if i&lt;=ulh &amp;&amp; i&gt;=llh
h1=h(i-llh+1);
else
h1=0;
end
end
%Lattice method
x = input(&#39;Enter first input sequence x[n]: &#39;);
h = input(&#39;Enter second input sequence h[n]: &#39;);
t=zeros(length(x)+length(h)-1,length(h));
for i=1:length(h)
for j=1:length(x)
y(i,j)=h(i)*x(j);
end
end
disp(&#39; Discrete Linear Convolution&#39;)
disp(&#39;By Lattice Method:&#39;);
disp(&#39;Lattice:&#39;);
disp(y);
p=1;
for i=1:length(h)
f=y(i,:);
f=f&#39;;
t(p:p+3,i)=f;
p=p+1;
end
y1=zeros(1,length(x)+length(h)-1);
for i=1:length(y1)
y1(1,i)=sum(t(i,:));

end
disp(&#39;y[n]:&#39;);
disp(y1);
